// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/upload/uploadpb/upload.proto

package uploadpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FileUploadInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Extension            string   `protobuf:"bytes,3,opt,name=extension,proto3" json:"extension,omitempty"`
	ToPersonalFolder     bool     `protobuf:"varint,4,opt,name=toPersonalFolder,proto3" json:"toPersonalFolder,omitempty"`
	ExternalFolderID     string   `protobuf:"bytes,5,opt,name=externalFolderID,proto3" json:"externalFolderID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileUploadInfo) Reset()         { *m = FileUploadInfo{} }
func (m *FileUploadInfo) String() string { return proto.CompactTextString(m) }
func (*FileUploadInfo) ProtoMessage()    {}
func (*FileUploadInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d8a82d2cf103927, []int{0}
}

func (m *FileUploadInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileUploadInfo.Unmarshal(m, b)
}
func (m *FileUploadInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileUploadInfo.Marshal(b, m, deterministic)
}
func (m *FileUploadInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileUploadInfo.Merge(m, src)
}
func (m *FileUploadInfo) XXX_Size() int {
	return xxx_messageInfo_FileUploadInfo.Size(m)
}
func (m *FileUploadInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FileUploadInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FileUploadInfo proto.InternalMessageInfo

func (m *FileUploadInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FileUploadInfo) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *FileUploadInfo) GetExtension() string {
	if m != nil {
		return m.Extension
	}
	return ""
}

func (m *FileUploadInfo) GetToPersonalFolder() bool {
	if m != nil {
		return m.ToPersonalFolder
	}
	return false
}

func (m *FileUploadInfo) GetExternalFolderID() string {
	if m != nil {
		return m.ExternalFolderID
	}
	return ""
}

type FileUploadBody struct {
	Bytes                []byte   `protobuf:"bytes,4,opt,name=bytes,proto3" json:"bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileUploadBody) Reset()         { *m = FileUploadBody{} }
func (m *FileUploadBody) String() string { return proto.CompactTextString(m) }
func (*FileUploadBody) ProtoMessage()    {}
func (*FileUploadBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d8a82d2cf103927, []int{1}
}

func (m *FileUploadBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileUploadBody.Unmarshal(m, b)
}
func (m *FileUploadBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileUploadBody.Marshal(b, m, deterministic)
}
func (m *FileUploadBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileUploadBody.Merge(m, src)
}
func (m *FileUploadBody) XXX_Size() int {
	return xxx_messageInfo_FileUploadBody.Size(m)
}
func (m *FileUploadBody) XXX_DiscardUnknown() {
	xxx_messageInfo_FileUploadBody.DiscardUnknown(m)
}

var xxx_messageInfo_FileUploadBody proto.InternalMessageInfo

func (m *FileUploadBody) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

type FileUploadRequest struct {
	// Types that are valid to be assigned to Data:
	//	*FileUploadRequest_Info
	//	*FileUploadRequest_Body
	Data                 isFileUploadRequest_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *FileUploadRequest) Reset()         { *m = FileUploadRequest{} }
func (m *FileUploadRequest) String() string { return proto.CompactTextString(m) }
func (*FileUploadRequest) ProtoMessage()    {}
func (*FileUploadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d8a82d2cf103927, []int{2}
}

func (m *FileUploadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileUploadRequest.Unmarshal(m, b)
}
func (m *FileUploadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileUploadRequest.Marshal(b, m, deterministic)
}
func (m *FileUploadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileUploadRequest.Merge(m, src)
}
func (m *FileUploadRequest) XXX_Size() int {
	return xxx_messageInfo_FileUploadRequest.Size(m)
}
func (m *FileUploadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FileUploadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FileUploadRequest proto.InternalMessageInfo

type isFileUploadRequest_Data interface {
	isFileUploadRequest_Data()
}

type FileUploadRequest_Info struct {
	Info *FileUploadInfo `protobuf:"bytes,1,opt,name=info,proto3,oneof"`
}

type FileUploadRequest_Body struct {
	Body *FileUploadBody `protobuf:"bytes,2,opt,name=body,proto3,oneof"`
}

func (*FileUploadRequest_Info) isFileUploadRequest_Data() {}

func (*FileUploadRequest_Body) isFileUploadRequest_Data() {}

func (m *FileUploadRequest) GetData() isFileUploadRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FileUploadRequest) GetInfo() *FileUploadInfo {
	if x, ok := m.GetData().(*FileUploadRequest_Info); ok {
		return x.Info
	}
	return nil
}

func (m *FileUploadRequest) GetBody() *FileUploadBody {
	if x, ok := m.GetData().(*FileUploadRequest_Body); ok {
		return x.Body
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FileUploadRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FileUploadRequest_Info)(nil),
		(*FileUploadRequest_Body)(nil),
	}
}

type FileUploadResponse struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileUploadResponse) Reset()         { *m = FileUploadResponse{} }
func (m *FileUploadResponse) String() string { return proto.CompactTextString(m) }
func (*FileUploadResponse) ProtoMessage()    {}
func (*FileUploadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d8a82d2cf103927, []int{3}
}

func (m *FileUploadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileUploadResponse.Unmarshal(m, b)
}
func (m *FileUploadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileUploadResponse.Marshal(b, m, deterministic)
}
func (m *FileUploadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileUploadResponse.Merge(m, src)
}
func (m *FileUploadResponse) XXX_Size() int {
	return xxx_messageInfo_FileUploadResponse.Size(m)
}
func (m *FileUploadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FileUploadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FileUploadResponse proto.InternalMessageInfo

func (m *FileUploadResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *FileUploadResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*FileUploadInfo)(nil), "upload.FileUploadInfo")
	proto.RegisterType((*FileUploadBody)(nil), "upload.FileUploadBody")
	proto.RegisterType((*FileUploadRequest)(nil), "upload.FileUploadRequest")
	proto.RegisterType((*FileUploadResponse)(nil), "upload.FileUploadResponse")
}

func init() {
	proto.RegisterFile("pkg/upload/uploadpb/upload.proto", fileDescriptor_7d8a82d2cf103927)
}

var fileDescriptor_7d8a82d2cf103927 = []byte{
	// 314 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x52, 0x41, 0x4f, 0xf2, 0x40,
	0x10, 0xa5, 0x50, 0x08, 0xcc, 0xf7, 0x85, 0xe0, 0xc4, 0x98, 0x4a, 0x3c, 0x90, 0x1e, 0x0c, 0x31,
	0x06, 0x13, 0x4c, 0xfc, 0x01, 0xc4, 0xa0, 0xdc, 0xcc, 0x1a, 0x2f, 0xc6, 0xcb, 0xd6, 0x8e, 0xd8,
	0x50, 0x76, 0xd7, 0xee, 0xa2, 0xf2, 0xa7, 0xfc, 0x8d, 0x76, 0xb7, 0x55, 0x6a, 0xca, 0xa9, 0x6f,
	0xde, 0xbc, 0xee, 0x9b, 0x37, 0x19, 0x18, 0xa9, 0xd5, 0xf2, 0x62, 0xa3, 0x52, 0xc9, 0xe3, 0xf2,
	0xa3, 0xa2, 0x12, 0x4c, 0x54, 0x26, 0x8d, 0xc4, 0x4e, 0x51, 0x85, 0x5f, 0x1e, 0xf4, 0xe7, 0x49,
	0x4a, 0x0f, 0xae, 0x5c, 0x88, 0x17, 0x89, 0x08, 0xbe, 0xe0, 0x6b, 0x0a, 0xbc, 0x91, 0x37, 0xee,
	0x31, 0x87, 0x2d, 0xa7, 0xb8, 0x79, 0x0d, 0x9a, 0x05, 0x67, 0x31, 0x9e, 0x40, 0x8f, 0x3e, 0x0d,
	0x09, 0x9d, 0x48, 0x11, 0xb4, 0x5c, 0x63, 0x47, 0xe0, 0x19, 0x0c, 0x8c, 0xbc, 0xa3, 0x4c, 0x4b,
	0xc1, 0xd3, 0xb9, 0x4c, 0x63, 0xca, 0x02, 0x3f, 0x17, 0x75, 0x59, 0x8d, 0xb7, 0x5a, 0xfb, 0x63,
	0xf6, 0xcb, 0x2c, 0xae, 0x83, 0xb6, 0x7b, 0xb0, 0xc6, 0x87, 0xa7, 0xd5, 0x79, 0x67, 0x32, 0xde,
	0xe2, 0x21, 0xb4, 0xa3, 0xad, 0x21, 0xed, 0x9e, 0xff, 0xcf, 0x8a, 0x22, 0xfc, 0x80, 0x83, 0x9d,
	0x8e, 0xd1, 0xdb, 0x86, 0xb4, 0xc1, 0x73, 0xf0, 0x93, 0x3c, 0xa2, 0x8b, 0xf6, 0x6f, 0x7a, 0x34,
	0x29, 0x57, 0xf2, 0x77, 0x01, 0xb7, 0x0d, 0xe6, 0x54, 0x56, 0x1d, 0xe5, 0x06, 0x2e, 0xf4, 0x5e,
	0xb5, 0xb5, 0xb7, 0x6a, 0xab, 0x9a, 0x75, 0xc0, 0x8f, 0xb9, 0xe1, 0xe1, 0x15, 0x60, 0xd5, 0x58,
	0x2b, 0x29, 0x34, 0x61, 0x1f, 0x9a, 0x72, 0xe5, 0x7c, 0xbb, 0x2c, 0x47, 0x38, 0x80, 0xd6, 0x5a,
	0x2f, 0xcb, 0x7d, 0x5a, 0x38, 0x7d, 0xaa, 0x0e, 0x7c, 0x4f, 0xd9, 0x7b, 0xf2, 0x4c, 0x78, 0x03,
	0x50, 0x10, 0xb6, 0x85, 0xc7, 0xf5, 0x11, 0xca, 0x64, 0xc3, 0xe1, 0xbe, 0x56, 0xe1, 0x1d, 0x36,
	0xc6, 0xde, 0x0c, 0x1e, 0xbb, 0x3f, 0x87, 0x10, 0x75, 0xdc, 0x09, 0x5c, 0x7e, 0x07, 0x00, 0x00,
	0xff, 0xff, 0x78, 0xb1, 0xaf, 0xbe, 0x26, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FileUploadServiceClient is the client API for FileUploadService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FileUploadServiceClient interface {
	UploadFile(ctx context.Context, opts ...grpc.CallOption) (FileUploadService_UploadFileClient, error)
}

type fileUploadServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFileUploadServiceClient(cc grpc.ClientConnInterface) FileUploadServiceClient {
	return &fileUploadServiceClient{cc}
}

func (c *fileUploadServiceClient) UploadFile(ctx context.Context, opts ...grpc.CallOption) (FileUploadService_UploadFileClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FileUploadService_serviceDesc.Streams[0], "/upload.FileUploadService/UploadFile", opts...)
	if err != nil {
		return nil, err
	}
	x := &fileUploadServiceUploadFileClient{stream}
	return x, nil
}

type FileUploadService_UploadFileClient interface {
	Send(*FileUploadRequest) error
	CloseAndRecv() (*FileUploadResponse, error)
	grpc.ClientStream
}

type fileUploadServiceUploadFileClient struct {
	grpc.ClientStream
}

func (x *fileUploadServiceUploadFileClient) Send(m *FileUploadRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *fileUploadServiceUploadFileClient) CloseAndRecv() (*FileUploadResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(FileUploadResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FileUploadServiceServer is the server API for FileUploadService service.
type FileUploadServiceServer interface {
	UploadFile(FileUploadService_UploadFileServer) error
}

// UnimplementedFileUploadServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFileUploadServiceServer struct {
}

func (*UnimplementedFileUploadServiceServer) UploadFile(srv FileUploadService_UploadFileServer) error {
	return status.Errorf(codes.Unimplemented, "method UploadFile not implemented")
}

func RegisterFileUploadServiceServer(s *grpc.Server, srv FileUploadServiceServer) {
	s.RegisterService(&_FileUploadService_serviceDesc, srv)
}

func _FileUploadService_UploadFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(FileUploadServiceServer).UploadFile(&fileUploadServiceUploadFileServer{stream})
}

type FileUploadService_UploadFileServer interface {
	SendAndClose(*FileUploadResponse) error
	Recv() (*FileUploadRequest, error)
	grpc.ServerStream
}

type fileUploadServiceUploadFileServer struct {
	grpc.ServerStream
}

func (x *fileUploadServiceUploadFileServer) SendAndClose(m *FileUploadResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *fileUploadServiceUploadFileServer) Recv() (*FileUploadRequest, error) {
	m := new(FileUploadRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _FileUploadService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "upload.FileUploadService",
	HandlerType: (*FileUploadServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "UploadFile",
			Handler:       _FileUploadService_UploadFile_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "pkg/upload/uploadpb/upload.proto",
}
